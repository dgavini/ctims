version: "3.8"

services:
  frontend:
    container_name: ctims-web
    build:
      context: ./
      args:
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        REACT_APP_API_URL: ${REACT_APP_API_URL}
        NEXTAUTH_URL: ${NEXTAUTH_URL}
        NEXTAUTH_API_URL: ${NEXTAUTH_API_URL}
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: on-failure
    networks:
        - my-network

  backend:
    container_name: ctims-api
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
      args:
        KEYCLOAK_REALM: ${KEYCLOAK_REALM}
        KEYCLOAK_URL: ${KEYCLOAK_URL}
        KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
        KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
        KEYCLOAK_ADMIN_CLIENT_ID: ${KEYCLOAK_ADMIN_CLIENT_ID}
        KEYCLOAK_ADMIN_CLIENT_SECRET: ${KEYCLOAK_ADMIN_CLIENT_SECRET}
        KEYCLOAK_TOKEN_ENDPOINT: ${KEYCLOAK_TOKEN_ENDPOINT}
        KEYCLOAK_CLIENT_UUID: ${KEYCLOAK_CLIENT_UUID}
        PRISMA_FIELD_ENCRYPTION_KEY: ${PRISMA_FIELD_ENCRYPTION_KEY}
        MM_API_URL: ${MM_API_URL}
        CTIMS_ENV: ${CTIMS_ENV}
        MM_API_TOKEN: ${MM_API_TOKEN}
    environment:
      DATABASE_URL: mysql://ctims:ctims@database:3306/ctims
    ports:
      - "3333:3333"
    restart: on-failure
    networks:
        - my-network

  database:
    container_name: ctims-db
    build:
      context: ./database
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    restart: on-failure
    networks:
        - my-network

  mm_api:
    image: docker-registry.uhn.ca:443/matchminer-api:a62fb924-1356-4c01-b088-1b99491bd12c
    ports:
      - "5000:5000"
    restart: on-failure
    networks:
      - my-network

  mm_mongo_db:
    container_name: mm_mongo_db
    image: mongo:3.6.10
    restart: on-failure
    ports:
      - "27018:27017"
    networks:
        - my-network
    volumes:
      - mm-mongo-db:/data/db

  postgres:
    image: postgres:13.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloakusers
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    networks:
      - my-network

  keycloak:
    depends_on:
      - postgres
    container_name: local_keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: keycloakusers
      DB_USER: admin
      DB_PASSWORD: admin
    image: quay.io/keycloak/keycloak:22.0.5
    ports:
      - "8080:8080"
    restart: unless-stopped
    command:
      - /opt/keycloak/bin/kc.sh
      - start-dev
    networks:
      - my-network

volumes:
  mm-mongo-db:

networks:
    my-network:

